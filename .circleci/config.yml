version: 2
jobs:
  node@10.16.2-unit:
    docker:
      - image: circleci/node:10.16.2
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: md5sum of all package.json and package-lock.json files
          command: |
            find -type f \( -name "package-lock.json" -o -name "package.json" \)  -not -path "**/node_modules/*" -not -path "**/dist/*" -exec md5sum "{}" + | sort -k2,2 > packages.txt
            cat packages.txt | md5sum | awk '{print $1}' > hash.txt
      - store_artifacts:
          path: ~/repo/packages.txt
      -store_artifacts:
          path: ~/repo/hash.txt
      - restore_cache:
          key: node-10-16-2-unit-cache-{{ checksum "hash.txt" }}-v1
      - run:
          name: install dependencies, bootstrap lerna
          command: |
            if [ ! -d node_modules ]; then
              npm ci && npm run lerna:bootstrap # install only if node_modules is not present
            fi
      - save_cache:
          key: node-10-16-2-unit-cache-{{ checksum "hash.txt" }}-v1
          paths:
            - ./node_modules
            - ./packages/base/node_modules
            - ./packages/cli/node_modules
            - ./packages/client/node_modules
            - ./packages/database-postgres/node_modules
            - ./packages/ed/node_modules
            - ./packages/extendedJoi/node_modules
            - ./packages/interfaces/node_modules
            - ./packages/logger/node_modules
            - ./packages/main/node_modules
            - ./packages/p2p/node_modules
            - ./packages/protobuf/node_modules
            - ./packages/transaction-pool/node_modules
            - ./packages/type-validation/node_modules
            - ./packages/utils/node_modules
            - ./packages/web-base/node_modules
            - ./packages/web-ed/node_modules
      - run:
          name: compile project
          command: npm run lerna:tsc
      - run:
          name: test
          command: npm run test
          no_output_timeout: 5m
  node@10.16.2-integration:
    machine:
      enabled: true
      image: circleci/classic:edge
    working_directory: ~/repo
    steps:
      - checkout
      - run:
        name: md5sum of all package.json and package-lock.json files
        command: |
          find -type f \( -name "package-lock.json" -o -name "package.json" \)  -not -path "**/node_modules/*" -not -path "**/dist/*" -exec md5sum "{}" + | sort -k2,2 > packages.txt
          cat packages.txt | md5sum | awk '{print $1}' > hash.txt
      - store_artifacts:
          path: ~/repo/packages.txt
      -store_artifacts:
          path: ~/repo/hash.txt
      - run:
          name: install-linux-dependencies
          command: sudo apt-get install curl ntp wget git libssl-dev openssl make gcc g++ autoconf automake python build-essential libtool -y
      - run:
          name: load nvm and install node@10.16.2
          command: |
            set +e
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install v10.16.2
            nvm alias default v10.16.2

            # Each step uses the same `$BASH_ENV`, so need to modify it
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV
      - run:
          name: update-npm
          command: npm install -g npm
      - restore_cache:
          key: node-10-16-2-integration-cache-{{ checksum "hash.txt" }}-v1
      - run:
          name: install dependencies, bootstrap lerna
          command: |
            if [ ! -d node_modules ]; then
              npm ci && npm run lerna:bootstrap # install only if node_modules is not present
            fi
      - save_cache:
          key: node-10-16-2-integration-cache-{{ checksum "hash.txt" }}-v1
          paths:
            - ./node_modules
            - ./packages/base/node_modules
            - ./packages/cli/node_modules
            - ./packages/client/node_modules
            - ./packages/database-postgres/node_modules
            - ./packages/ed/node_modules
            - ./packages/extendedJoi/node_modules
            - ./packages/interfaces/node_modules
            - ./packages/logger/node_modules
            - ./packages/main/node_modules
            - ./packages/p2p/node_modules
            - ./packages/protobuf/node_modules
            - ./packages/transaction-pool/node_modules
            - ./packages/type-validation/node_modules
            - ./packages/utils/node_modules
            - ./packages/web-base/node_modules
            - ./packages/web-ed/node_modules
      - run:
          name: compile project
          command: npm run lerna:tsc
      - run:
          name: test-integration
          command: npm run test:integration
  node@10.16.2-end2end:
    machine:
      enabled: true
      image: circleci/classic:edge
    working_directory: ~/repo
    steps:
      - checkout
      - run:
         name: Update to Docker Compose 1.24.1 # to enable: docker-compose up --no-start
         command: |
           curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
           chmod +x ~/docker-compose
           sudo mv ~/docker-compose /usr/local/bin/docker-compose
       - run:
            name: md5sum of all package.json and package-lock.json files
            command: |
              find -type f \( -name "package-lock.json" -o -name "package.json" \)  -not -path "**/node_modules/*" -not -path "**/dist/*" -exec md5sum "{}" + | sort -k2,2 > packages.txt
              cat packages.txt | md5sum | awk '{print $1}' > hash.txt
        - store_artifacts:
            path: ~/repo/packages.txt
        -store_artifacts:
            path: ~/repo/hash.txt
      - run:
          name: install-linux-dependencies
          command: sudo apt-get install curl ntp wget git libssl-dev openssl make gcc g++ autoconf automake python build-essential libtool -y
      - run:
          name: load nvm and install node@10.16.2
          command: |
            set +e
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install v10.16.2
            nvm alias default v10.16.2

            # Each step uses the same `$BASH_ENV`, so need to modify it
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV
      - run:
          name: update-npm
          command: npm install -g npm
      - restore_cache:
          key: node-10-16-2-end2end-cache-{{ checksum "hash.txt" }}-v1
      - run:
          name: install dependencies, bootstrap lerna
          command: |
            if [ ! -d node_modules ]; then
              npm ci && npm run lerna:bootstrap # install only if node_modules is not present
            fi
      - save_cache:
          key: node-10-16-2-end2end-cache-{{ checksum "hash.txt" }}-v1
          paths:
            - ./node_modules
            - ./packages/base/node_modules
            - ./packages/cli/node_modules
            - ./packages/client/node_modules
            - ./packages/database-postgres/node_modules
            - ./packages/ed/node_modules
            - ./packages/extendedJoi/node_modules
            - ./packages/interfaces/node_modules
            - ./packages/logger/node_modules
            - ./packages/main/node_modules
            - ./packages/p2p/node_modules
            - ./packages/protobuf/node_modules
            - ./packages/transaction-pool/node_modules
            - ./packages/type-validation/node_modules
            - ./packages/utils/node_modules
            - ./packages/web-base/node_modules
            - ./packages/web-ed/node_modules
      - run:
          name: compile project
          command: npm run lerna:tsc
      - run:
          name: test-end2end
          command: npm run test:e2e
  node@10.16.2-benchmark:
    machine:
      enabled: true
      image: circleci/classic:edge
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: install-linux-dependencies
          command: sudo apt-get install curl ntp wget git libssl-dev openssl make gcc g++ autoconf automake python build-essential libtool -y
      - run:
          name: load nvm and install node@10.16.2
          command: |
            set +e
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install v10.16.2
            nvm alias default v10.16.2

            # Each step uses the same `$BASH_ENV`, so need to modify it
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV
      - run:
          name: update-npm
          command: npm install -g npm
      - restore_cache:
          key: node-10-16-2-benchmark-cache-{{ checksum "package-lock.json" }}-v1
      - run:
          name: npm install dependencies
          command: |
            if [ ! -d node_modules ]; then
              npm ci # install only if node_modules is not present
            fi
      - save_cache:
          key: node-10-16-2-benchmark-cache-{{ checksum "package-lock.json" }}-v1
          paths:
            - ./node_modules
      - run:
          name: benchmark tests
          command: npm run benchmark
  security@npm-audit:
    docker:
      - image: circleci/node:10.16.2
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: npm install dependencies
          command: npm ci
      - run:
          name: npm audit dependencies
          command: node auditAllPackages.js
  browser@client-unit:
    machine:
      enabled: true
      image: circleci/classic:edge
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: md5sum of all package.json and package-lock.json files
          command: |
            find -type f \( -name "package-lock.json" -o -name "package.json" \)  -not -path "**/node_modules/*" -not -path "**/dist/*" -exec md5sum "{}" + | sort -k2,2 > packages.txt
            cat packages.txt | md5sum | awk '{print $1}' > hash.txt
      - store_artifacts:
          path: ~/repo/packages.txt
      -store_artifacts:
          path: ~/repo/hash.txt
      - run:
          name: update linux dependencies
          command: sudo apt-get update
      - run:
          name: install-linux-dependencies
          command: sudo apt-get install curl ntp wget git libssl-dev openssl make gcc g++ autoconf automake python build-essential libtool -y
      - run:
          name: load nvm and install node@10.16.2
          command: |
            set +e
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install v10.16.2
            nvm alias default v10.16.2

            # Each step uses the same `$BASH_ENV`, so need to modify it
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV
      - run:
          name: update-npm
          command: npm install -g npm
      - restore_cache:
          key: node-10-16-2-browser-cache-{{ checksum "hash.txt" }}-v1
      - run:
          name: install dependencies, bootstrap lerna
          command: |
            if [ ! -d node_modules ]; then
              npm ci && npm run lerna:bootstrap # install only if node_modules is not present
            fi
      - save_cache:
          key: node-10-16-2-browser-cache-{{ checksum "hash.txt" }}-v1
          paths:
            - ./node_modules
            - ./packages/base/node_modules
            - ./packages/cli/node_modules
            - ./packages/client/node_modules
            - ./packages/database-postgres/node_modules
            - ./packages/ed/node_modules
            - ./packages/extendedJoi/node_modules
            - ./packages/interfaces/node_modules
            - ./packages/logger/node_modules
            - ./packages/main/node_modules
            - ./packages/p2p/node_modules
            - ./packages/protobuf/node_modules
            - ./packages/transaction-pool/node_modules
            - ./packages/type-validation/node_modules
            - ./packages/utils/node_modules
            - ./packages/web-base/node_modules
            - ./packages/web-ed/node_modules
      - run:
          name: compile project
          command: npm run lerna:tsc
      - run:
          name: browser test
          command: npm run test:browser
workflows:
  version: 2
  all_unit_tests_every_commit:
    jobs:
      - node@10.16.2-unit
      - browser@client-unit
  all_integration_every_third_night_on_develop_branch:
    triggers:
      - schedule:
         cron: "59 23 3,6,9,12,15,18,21,24,27,30 * *"
         filters:
           branches:
             only:
               - develop
    jobs:
      - node@10.16.2-integration
  all_end2end_every_second_night_on_develop_branch:
    triggers:
      - schedule:
         cron: "59 23 2,4,6,8,10,12,14,16,18,20,22,24,26,28,30 * *"
         filters:
           branches:
             only:
               - develop
    jobs:
      - node@10.16.2-end2end
  benchmarking_every_third_night_on_develop_branch:
    triggers:
      - schedule:
         cron: "59 23 3,6,9,12,15,18,21,24,27,30 * *"
         filters:
           branches:
             only:
               - develop
    jobs:
      - node@10.16.2-benchmark
  run_npm_audit_on_every_commit:
    jobs:
      - security@npm-audit
