name: new release on testnet
on:
  workflow_dispatch:
    inputs:
    logLevel:
      description: 'Log level'
      required: true
      default: 'warning'

jobs:
  new-release-on-testnet:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout testnet branch
        uses: actions/checkout@v2
        with:
          ref: testnet
      - uses: actions/setup-node@v2
        with:
          node-version: '16.20.2'
      - name: install lerna
        run: npm ci && npm run lerna:clean && npm run lerna:bootstrap && npm run lerna:removeArtifacts && npm run lerna:tsc
      - name: set github username
        run: git config --global user.name "${{ secrets.RELEASE_GITHUB_USERNAME }}"
      - name: set github email
        run: git config --global user.email "${{ secrets.RELEASE_GITHUB_EMAIL }}"
      - name: set github token
        run: git remote set-url origin https://a1300:${{ secrets.RELEASE_GITHUB_TOKEN }}@github.com/gnyio/gny-experiment.git
      - name: build gny client
        run: node_modules/lerna/cli.js run --scope="@gny/client" web
      - name: npm set unsafe-perm
        run: npm set unsafe-perm true
      - name: npm set auth token
        run: npm set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}
      - name: npm set username
        run: npm set username ${{ secrets.NPM_USERNAME }}
      - name: npm set email
        run: npm set email ${{ secrets.NPM_EMAIL }}
      - name: new release (no push)
        run: node_modules/lerna/cli.js version patch --yes --exact --no-push
      - name: push release commit
        run: git push origin testnet --force
      - name: push new tag
        run: git push origin "v$(cat lerna.json | grep version | head -1 | awk -F':' '{ print $2 }'   | sed 's/[",]//g' | tr -d '[[:space:]]')"
      - name: publish individual lerna packages
        run: |
          cd packages/client && npm publish --access=public; cd ../..
          cd packages/web-base && npm publish --access=public; cd ../..
          cd packages/web-ed && npm publish --access=public; cd ../..
          cd packages/interfaces && npm publish --access=public; cd ../..
          cd packages/utils && npm publish --access=public; cd ../..
          cd packages/network && npm publish --access=public; cd ../..
          cd packages/cli && npm publish --access=public; cd ../..
          cd packages/base && npm publish --access=public; cd ../..
          cd packages/ed && npm publish --access=public; cd ../..
          cd packages/extended-joi && npm publish --access=public; cd ../..
          cd packages/logger && npm publish --access=public; cd ../..
          cd packages/type-validation && npm publish --access=public; cd ../..
          cd packages/json-sql && npm publish --access=public; cd ../..
