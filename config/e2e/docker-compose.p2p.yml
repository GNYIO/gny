version: '3.3'
services:
  db1:
    image: "postgres:9.6.12"
    container_name: 'postgres_3000'
    restart: always
    ports:
      - '3000:5432'
    environment:
     POSTGRES_PASSWORD: docker
     POSTGRES_DB: postgres
     POSTGRES_USER: postgres
  app1:
    build: ../..
    image: gny-experiment:integration # tags
    command: bash -c 'sleep 10s; node packages/main/dist/src/app --config "config/e2e/first.json" --publicIP $$(./getIP.sh app1) --ormConfig "config/e2e/ormconfig.first.json"'
    environment:
      NODE_ENV: production
    ports:
      - '4096:4096'
      - '4097:4097'

  db2:
    image: "postgres:9.6.12"
    container_name: 'postgres_3001'
    restart: always
    ports:
      - '3001:5432'
    environment:
     POSTGRES_PASSWORD: docker
     POSTGRES_DB: postgres
     POSTGRES_USER: postgres
  app2:
    build: ../..
    image: gny-experiment:integration # tags
    command: bash -c 'sleep 20s; node packages/main/dist/src/app --config "config/e2e/second.json" --publicIP $$(./getIP.sh app2) --ormConfig "config/e2e/ormconfig.second.json" --peers "/ip4/$$(./getIP.sh app1)/tcp/4097/ipfs/QmQbVdde9AeXSP3FoLyVNd3Fi3BjCe2tFyJV43bNWEBYSA"'
    environment:
      NODE_ENV: production
    ports:
      - '4098:4096'
      - '4099:4097'
